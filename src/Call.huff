// =============================================================================
// EXTERNAL CALL EXECUTION
// =============================================================================
// Handles standard external calls with value and return data management
// Encoding: [20 bytes address][2 bytes length][2 bytes value][3 bytes return mask]
// =============================================================================

#include "utils/Constants.huff"

#define macro DO_CALL() = takes(3) returns (1) {
    // [prefix, offset, value]
    dup1                                      // [prefix, prefix, offset, value]
    [_ADDRESS_MASK] and                       // [target, prefix, offset, value]
    dup2                                      // [prefix, target, prefix, offset, value]

    dup1
    [_SHIFT_160] shr                          // [prefix >> 0xA0, prefix, target, prefix, offset, value]
    [_CALL_LENGTH_MASK] and                   // [length, prefix, target, prefix, offset, value]
  
    0x00                                      // [0, length, prefix, target,  offset , value]
    0x00                                      // [0, 0, length, prefix, target,  offset, value]
    dup3                                      // [length, 0, 0, length, prefix, target,  offset, value]
    [_OFFSET_32]                              // [0x20, length, 0, 0, length, prefix, target,  offset, value]
    dup9                                      // [offset, 0x20, length, 0, 0, length, prefix, target,  offset, value]
    add                                       // [offset + 0x20, length, 0, 0, length, prefix, target,  offset, value]

    dup10                                     // [value, offset + 0x20, length, 0, 0, length, prefix, target, prefix, offset, value]
    dup8                                      // [target, value, offset + 0x20, length, 0, 0, length, prefix, target, prefix, offset, value]
    
    // Gas optimization: Leave some gas for post-call operations
    gas                                       // [gas, target, value, offset + 0x20, length, 0, 0, length, prefix, target, prefix, offset, value]
    call                                      // [success, length, prefix, target, prefix, offset, value]]
    iszero error jumpi                        // [length, prefix, target, prefix, offset, value]

    swap5                                     // [value, prefix, target, prefix, offset, length ]
    swap2                                     // [target, prefix, value, prefix, offset, length ]
    pop                                       // [prefix, value, prefix, offset, length]
    pop                                       // [value, prefix, offset, length]

    iszero iszero exit_call jumpi
    dup1
    [_SHIFT_200] shr
    0xFFFFFF and
    PUSH_CALL_RETURN()
 
    exit_call:
        pop
        pop
        [_OFFSET_32] add
}
